// Code generated by entc, DO NOT EDIT.

package productspu

const (
	// Label holds the string label denoting the productspu type in the database.
	Label = "product_spu"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBrandID holds the string denoting the brand_id field in the database.
	FieldBrandID = "brand_id"
	// FieldCategoryID holds the string denoting the category_id field in the database.
	FieldCategoryID = "category_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// FieldSellingPoint holds the string denoting the selling_point field in the database.
	FieldSellingPoint = "selling_point"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldBannerURL holds the string denoting the banner_url field in the database.
	FieldBannerURL = "banner_url"
	// FieldMainURL holds the string denoting the main_url field in the database.
	FieldMainURL = "main_url"
	// FieldPriceFee holds the string denoting the price_fee field in the database.
	FieldPriceFee = "price_fee"
	// FieldPriceScale holds the string denoting the price_scale field in the database.
	FieldPriceScale = "price_scale"
	// FieldMarketPriceFee holds the string denoting the market_price_fee field in the database.
	FieldMarketPriceFee = "market_price_fee"
	// FieldMarketPriceScale holds the string denoting the market_price_scale field in the database.
	FieldMarketPriceScale = "market_price_scale"
	// FieldCreateAt holds the string denoting the create_at field in the database.
	FieldCreateAt = "create_at"
	// FieldUpdateAt holds the string denoting the update_at field in the database.
	FieldUpdateAt = "update_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"

	// Table holds the table name of the productspu in the database.
	Table = "product_spus"
)

// Columns holds all SQL columns for productspu fields.
var Columns = []string{
	FieldID,
	FieldBrandID,
	FieldCategoryID,
	FieldName,
	FieldDesc,
	FieldSellingPoint,
	FieldUnit,
	FieldBannerURL,
	FieldMainURL,
	FieldPriceFee,
	FieldPriceScale,
	FieldMarketPriceFee,
	FieldMarketPriceScale,
	FieldCreateAt,
	FieldUpdateAt,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultBrandID holds the default value on creation for the "brand_id" field.
	DefaultBrandID int64
	// BrandIDValidator is a validator for the "brand_id" field. It is called by the builders before save.
	BrandIDValidator func(int64) error
	// DefaultCategoryID holds the default value on creation for the "category_id" field.
	DefaultCategoryID int64
	// CategoryIDValidator is a validator for the "category_id" field. It is called by the builders before save.
	CategoryIDValidator func(int64) error
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultDesc holds the default value on creation for the "desc" field.
	DefaultDesc string
	// DescValidator is a validator for the "desc" field. It is called by the builders before save.
	DescValidator func(string) error
	// DefaultSellingPoint holds the default value on creation for the "selling_point" field.
	DefaultSellingPoint string
	// SellingPointValidator is a validator for the "selling_point" field. It is called by the builders before save.
	SellingPointValidator func(string) error
	// DefaultUnit holds the default value on creation for the "unit" field.
	DefaultUnit string
	// UnitValidator is a validator for the "unit" field. It is called by the builders before save.
	UnitValidator func(string) error
	// DefaultPriceFee holds the default value on creation for the "price_fee" field.
	DefaultPriceFee int64
	// PriceFeeValidator is a validator for the "price_fee" field. It is called by the builders before save.
	PriceFeeValidator func(int64) error
	// DefaultPriceScale holds the default value on creation for the "price_scale" field.
	DefaultPriceScale int8
	// DefaultMarketPriceFee holds the default value on creation for the "market_price_fee" field.
	DefaultMarketPriceFee int64
	// MarketPriceFeeValidator is a validator for the "market_price_fee" field. It is called by the builders before save.
	MarketPriceFeeValidator func(int64) error
	// DefaultMarketPriceScale holds the default value on creation for the "market_price_scale" field.
	DefaultMarketPriceScale int8
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
)
